name: Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Read Go version
        id: go-version
        run: |
          GO_VERSION=$(cat .go-version)
          echo "version=$GO_VERSION" >> $GITHUB_OUTPUT

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ steps.go-version.outputs.version }}
          cache: true

      - name: Run tests
        run: |
          go test -v -race -coverprofile=coverage.out ./...

      - name: Generate test coverage report
        run: |
          go tool cover -html=coverage.out -o coverage.html

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.html

      # Commented out strict coverage check - now using Codecov for coverage reporting
      # - name: Check test coverage
      #   if: matrix.go-version == '1.21'
      #   run: |
      #     COVERAGE=$(go tool cover -func=coverage.out | grep total | awk '{print $3}' | sed 's/%//')
      #     echo "Total test coverage: ${COVERAGE}%"
      #     if (( $(echo "$COVERAGE < 60" | bc -l) )); then
      #       echo "❌ Test coverage is below 60%"
      #       exit 1
      #     else
      #       echo "✅ Test coverage is above 60%"
      #     fi

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.out
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false 